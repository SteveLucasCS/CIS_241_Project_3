#!/bin/bash

# Path to newname script (optional)
newname="./newname"

: 'Uses newname script to preserve duplicate files. If newname throws an
exception, mv is used instead.
Arguments:  $1=target_path $2=destination_path [$3=options]
'
function use_newname() {
    if [[ -n $3 ]]; then
        /bin/bash $newname "$3" "$1" "$2"
    else
        /bin/bash $newname "$1" "$2"
    fi
}

use_newname=1

# Data path (raw zip contents) is hard-coded per instructions
data="./data"
# Destination path (organized zip contents) is hard-coded per instructions
destination="./grading"
target=""

# Prompt user for zip file path
echo "Enter the target zip file path: "
echo "DEBUG LINE: target set to cis241.zip - REMOVE THIS LINE IN FINAL VERSION"
# read target
target="cis241.zip"

if [[ ! -e $target ]]; then
    echo "Invalid Input: the file \"$target\" does not exist."
    exit
fi

# Create the data directory if it does not exist
if [[ ! -d $data ]]; then
    mkdir $data
fi

# Unzip target files contents to data path
unzip -C -q $target -d $data/

# Count the number of files extracted
: '$(ls -afq | wc -l) line referenced from:
 https://unix.stackexchange.com/questions/90106/whats-the-most-resource-efficient-way-to-count-how-many-files-are-in-a-director
'

file_count=$(ls -afq $data | wc -l)
file_count=$((file_count - 2))
echo "Unzipped $file_count files..."

# Create destination directory if it does not exist
if [[ ! -d $destination ]]; then
    mkdir $destination
fi

# Read each student's name from the data files
for file in $data/*
do
    #
    # Remove the directory/path from each filename (./data/ in this case)
    file_clean=$(echo $file | sed 's/.*\///')
    
    # Parse the filename for submission information
    echo $file_clean | while IFS='_' read project student attempt date filename
    do
        # Check if the student has an existing subdirectory in the destination
        if [[ ! -d $destination/$student ]]; then
            # Create a directory if one does not exist
            mkdir $destination/$student
        fi

        # Rename .txt file created by Blackboard to "memo.txt"
        if [[ -z "$filename" ]]; then
            filename="memo.txt"
        fi

        # Move submission files to student's subdirectory
        if [[ use_newname -eq 1 ]]; then
            # If newname script is present, it is used to preserve mulitple copies
            use_newname "$file" "$destination" "-q"
        else
            # Otherwise, use standard mv command which will overrite existing files
            mv "$file" "$destination/$student/$filename"
        fi
    done # Current file moved
done # All files moved

